#  Задача -1
# спросите у пользователя цифру и верните ему True если он ввел цифру в другом слечии False 

#  Задача 0
# получите сумму листа [7,8,8,4,8,4,8,4,8,4,8,4,8] 

#  Задача 1
# Есть список:
# a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
# # Выведите все элементы, которые больше 5.

# for i in a: 
#     if i > 5:
#         print(i)



#Задача 2
# Есть набор чисел 
# digits = (113,118,-5,1,135,137,0,142,144,17,154,0,155,2,159,172)
# # Поделить каждое число из digits на 9 и вывести на экран.

# digits1 = []
# for i in digits:
#     a = i / 9
#     digits1.append(a)
# print(digits1)



#Задача 3
# fruits = ('banana','stawberry','apple','orange','limon','ananas')
# # # Выведите первый и последний элемент списка.

# print(fruits[0])
# print(fruits[-1])


#Задача 4 
# Напишите программу, которая берёт массив данных spisok2 и 
# выводит только те элементы из spisok_2, которых нет в spisok_1.
# spisok_1 = ('Lamborgini', 17, '4456', 2020, 'Paris', 'USA', 11, 23)
# spisok_2 = ('Ferrari', 17, 4456, 2021, 'Paris', 'UK', 777, 23)

# for i in spisok_2:
#     if i not in spisok_1:
#         print(i)

# Задача 5
# Напишите программу, которая выводит чётные числа из списка длиною 300 объектов
#    и останавливается, если встречает число 237.

# for i in range(300):
#     if i % 2 == 0:
#         print(i)
#     elif i == 237:
#         break



# Задание 6:
# У вас есть идея создать Back-end для игры: "Угадай число."

# С помощью функции input() спрашивайте число от пользователя.
 
# Запустите бесконечный цикл!
# И пытайтесь спрашивать у пользователя какое-то число каждый раз.
# Если пользователь угадал число которое сгенерировал компьютер 
# остановите цикл и скажите пользователю - "Вы угадали!"
# Если пользователь не угадал вы снова спросите у него число.
# Если пользователь 3 раза подряд не угадал число, 
# вы останавливаете цикл и говорите: "Вы проиграли..."

# import random 
# n = 0
# a = random.randint(0,10)
# print(a)
# while n < 3:
#     num1 = int(input('Enter number: '))
#     if num1 != a:
#         n +=1 
#         if n == 3:  
#             print('Loser')
#     elif num1 == a:
#         print('Yes')
#         break

    





# Задание 7:
# 1. Спросите у пользователя предложение и поделите его по пробелам.
# Если пользователь ввёл меньше шести слов спросите снова, 
# Не принимайте предложения если оно короче 6 символов, спрашивайте снова и снова.
# 2. Поделите полученный лист на 2 равные части (Если число элементов листа нечетное, 
# то длина первой части должна быть на один элемент больше)
# 3. Переставьте эти две части местами и запишите в лист. 



# while True:
#     text = input('Enter text:  ')
#     text1 = text.split( )
#     a = len(text1)
#     if a >= 6:
#         print(text1)
        
#         if a % 2 == 0:
#             b = a // 2
#             list1 = text1[0:b]
#             list2 = text1[b:]
#             for i in list1:
#                 list2.append(i)
#             print(list2)
#         else:
#             c = a // 2 + 1
#             list1 = text1[0:c]
#             list2 = text1[c:]
#             for i in list1:
#                 list2.append(i)
#             print(list2)
#     break  







# Задание 8:
# Вам дан список:
# numbers = [2,4,7,1,8.4,-3.3,7.1,-2,4,-1,7,-43,8,-3,6,9]
# Определите количество четных и не четных
# Создайте функцию которое принимайет лист и возвращает количество четных и не четных чисел

# def schot(arr: list):
#     a = 0
#     b = 0
#     for i in arr:
#         if i % 2 == 0:
#             a += 1
#         else:
#             b += 1
#     return f'chot {a}, nechot {b}'
# print(schot(numbers))








# Задание 9:
# Дан список  целых чисел:
# numbers = [0,2,4,7,1,8,0,-3,7,0,-2,4,0,0,-1,7,-43,0,8,-3,6,9]
# Создайте новый лист и замените отрицательные числа на -1, положительные на число 1, ноль оставить без изменения.

# num1 = []
# for i in numbers:
#     if i < 0:
#         num1.append(-1)
#     elif i > 0:
#         num1.append(1)
#     else:
#         num1.append(0)
# print(num1)





# Задание 10:
# my_list = [2,4,6,8,10,1,3,5,7,9,11,13,17]
# # Выведите все элементы списка с четными ИНДЕКСАМИ (то есть A[0], A[2], A[4], ... ])

# print(my_list[0::2])


# Задание 11:
# Дан список чисел:
# numbers = [1,0,-2,4,3,6,6,3,5,8,4,2] 
# Выведите все элементы списка, которые больше предущего элемента
# Пример: (numbers: 1,5,2,4,3 Результат: 5,4)

# for i in range(len(numbers) -1): 
#     if numbers[i] < numbers[i+1]:
#         print(numbers[i+1])

    



# Задание 12:
# Сколько 3 в числе 175315354518498331?


# n =0
# for i in '175315354518498331':
#     if i == '3':
#         n += 1
# print(n)


# Задание 13:
# Распишите по порядку шаги исполнения выражения: (7 + 5) * 56 / (3 * (27**3))




# Задание 14:
#  Получить из modified - original 

# original = '''Исследователи ESET сообщили,
# что в настоящее время активность XDSpy прекратилась,
# и произошло это после предупреждения, опубликованного белорусским CERT в феврале текущего года.
# По сути, тогда эксперты обнаружили одну из вредоносных кампаний хакеров, которая и была детально описана в документе.
# Именно информация белорусского CERT стала отправной точкой для начала расследования ESET и помогла аналитикам обнаружить прошлые операции XDSpy.
# __________АВТОР: НЕИЗВЕСТНО__________'''

 
# modified = '''исследователи ESET с()()бщили/
# чт() в наст()ящее время активн()сть xDSpy прекратилась/
# и пр()из()шл() эт() п()сле предупреждения/ ()публик()ванн()г() бел()русским cert в феврале текущег() г()да!
# П() сути/ т()гда эксперты ()бнаружили ()дну из вред()н()сных кампаний хакер()в/ к()т()рая и была детальн() ()писана в д()кументе!
# именн() инф()рмация бел()русск()г() cert стала ()тправн()й т()чк()й для начала расслед()вания eset и п()м()гла аналитикам ()бнаружить пр()шлые ()перации XDSpy!'''


# a = modified.replace('()', 'о')
# b = a.replace('/', ',')

# print(b)







# Задача 15:
# Даны списки:
# Нужно вернуть список у которого сумма цыфр больще
# list_1 = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
# list_2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
# sum1 = 0
# sum2 = 0
# for i in list_1:
#     sum1 += i
# print(sum1)
# for j in list_2:
#     sum2 += j
# print(sum2)
# if sum1 > sum2:
#     print(list_1)
# else:
#     print(list_2)






# Задача 16: 
# Напишите программу для слияния нескольких словарей в один.
# y_friends = {
# "Joomart": "+996555246810", 
# "Adinai": "+996555013579",
# "Ermek": "+996777013579",
# "Atai": "+996777246810",
# "Aslan": "+996999246810",}
# his_her_friends = {
# "Lyazat": "+996551123456",
# "Salavat": "+996552234567",
# "Daniyar": "+996553345678",
# "Bolot": "+996554456789",
# "Alymbek": "+996555501234",
# "Dastan": "+996556678912",
# "Maksat": "+996557789012",
# "Aibek": "+996558890123",
# }






# Задача 17: 
# # Попросить пользователя ввести текст. В результате вывести половину текста 
# # в верхнем регистре (заглавные) и в нижнем регистре (прописные).

# text = input('Enter text:  ')
# a = len(text) // 2
# list1 = text[0:a]
# list2 = text[a:]
# print(list1)
# print(list2)
# print(f'{list1.upper()}{list2.lower()}')




# Задача 18: 
# "Аналог шифра цезаря ". Программа должна запрашивать элементы списка через пробел. 
# После чего пользователь должен ввести значение для сдвига элементов списка. 
# Значение может быть как положительным, так и отрицательным. Если значение положительное, 
# элементы списка должны сдвигаться вправо, если отрицательное - влево. Результат необходимо вывести на экран:
# Введенные данные: [5,7,9,10,2], 2
# Результат:        [9,10,2,5,7]


# Задача 19: 
# "Напишите функцию которая принимает в себя словарь где ключи это номера а значения страны. 
# Попросите пользователя ввести страну или ключ и выдайте ему результат."
# d = {'1': 'kyrgyzstan', '2': 'kazahstan'}



# Задача 20: 
# Напишите задания для этого кода

# a = [1, 1, 2, 3,13, 13, 13, 13, 13, 13, 13, 13, 13, 5, 8, 13, 21, 34,1,55, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 1313, 13, 13, 13, 13, 13, 89]
# a.append(13)
# b = a.count(13) * 100 / len(a)

# if b == 70.0:
#         print('совпадение? не думаю')
# if b < 70.0:
#         print('неужели')
# if b > 70.0:
#         print('я так и знал')


# Задача 21:
# # Напишите программу для нахождения Периметра и Площади квадрата
# #нахождения Площади квадрата




# Задача 22:
# напишите функцию который принимает 
# растояне и скорость и возврощает 
# время за котррое он пройдет это расторяние


# Задача 23:
# создайте lambda функцию для вычисления процента от 2022
# функция должна принимать 1 аргумент и 
# вернуть какой процент он состовляет от 2022
# результат округлите до 2 цифр осле запятой
# пример: 2022 = 100%; 100 = 4.94%; 1022 = 50.54%
